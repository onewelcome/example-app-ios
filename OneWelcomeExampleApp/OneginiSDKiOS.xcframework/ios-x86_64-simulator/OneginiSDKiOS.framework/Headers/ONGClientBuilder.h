// Copyright (c) 2016 Onegini. All rights reserved.

#import <Foundation/Foundation.h>

@class ONGClient, ONGConfigModel;

NS_ASSUME_NONNULL_BEGIN

/**
 * `ONGClientBuilder` is responsible for setting up SDK.
 *
 * SDK setup:
 *
 * In order to instantiate SDK you have to set at least `configModel` and `X509PEMCertificates`.
 * If one or both are not set, `ONGClientBuilder` will try to retrieve missing values from `OneginiConfigModel` class
 * generated by SDK configurator tool. If it is impossible to locate `OneginiConfigModel` - SDK can not be configured
 * correctly and exception is raised.
 */
DEPRECATED_MSG_ATTRIBUTE("Please use `ClientBuilder` instead.")
@interface ONGClientBuilder : NSObject

/**
 * Set instance of `ONGConfigModel` used for SDK configuration. This value can not be `nil`.
 *
 * @param configModel Instance of `ONGConfigModel` used for SDK configuration.
 */
- (instancetype)setConfigModel:(ONGConfigModel *)configModel;

/**
  * Set  additional (optional) array of resource URLs used for the SDK configuration.
  * This has to be set from the code, before calling `build()` function.
  * Can be used when the certficate used for pinning covers additional URLs.
  *
  * @param additionalResourceUrls Array object used for SDK configuration.
  */
 - (instancetype)setAdditionalResourceUrls:(NSArray<NSString *>*)additionalResourceUrls;

/**
 * Flag instructing SDK to store cookies between requests. `YES` by default.
 *
 * @param storeCookies Whether or not to store cookies between requests.
 */
- (instancetype)setStoreCookies:(BOOL)storeCookies;

/**
 *  For verification of the bundled DER encoded CA X509 certificates,
 *  the App must provide a list of matching PEM base64 encoded certificates for each bundled DER encoded CA X509 certificate to this client.
 *  The PEM base64 encoded certificates must be stripped from their armor (remove ---BEGIN CERTIFICATE--- & ---END CERTIFICATE---)
 *
 *  This method must be called before any service request is made, preferably after initialization.
 *  If certificate verification fails prior to making a service request, an Exception is thrown.
 *
 *  To convert a DER encoded certificate to PEM, use the following openssl command:
 *  openssl x509 -in <filename>.cer -inform der -out <filename>.pem -outform pem
 *  Do not include the PEM files themselved in App bundle!
 *
 *  @param certificates Array of PEM base64 encoded certificates without armor
 */
- (instancetype)setX509PEMCertificates:(NSArray<NSString *> *)certificates;

/**
 *  To reduce frequency of client validation calls, device config stays cached for specified period of time.
 *  Setting cache duration to negative or 0 value will disable caching.
 *
 *  This method must be called before any service request is made, preferably after initialization.
 *
 *  @param cacheDuration cache duration in seconds. Default value is 300 seconds (5 minutes).
 */
- (instancetype)setDeviceConfigCacheDuration:(NSTimeInterval)cacheDuration;

/**
 * Configure the HTTP request timeout for all HTTP requests made by the SDK. This goes for both the HTTP calls made by the SDK as for the resource requests
 * that are made using the SDK.
 *
 * @param requestTimeout timeout for a HTTP request
 */
- (instancetype)setHttpRequestTimeout:(NSTimeInterval)requestTimeout;

/**
 * The hexadecimal server public key used to perform a Payload Encryption handshake. Can be nil if Payload Encryption is not used.
 *
 * @param serverPublicKey used to perform a Payload Encryption handshake.
 */
- (instancetype)setServerPublicKey:(NSString *)serverPublicKey;

/**
 * Set up SDK and return configured instance of `ONGClient` using builder's values.
 * Subsequent calls will not take any effect on the instantiated `ONGClient`.
 *
 * @return configured instance of `ONGClient`
 *
 * @warning In case `ONGClientBuilder` doesn't have required values (`configModel` and `X509PEMCertificates`) and can not
 * retrieve them from `OneginiConfigModel` class (generated by SDK Configurator) - `ONGSDKInitializationException` will be thrown.
 */
- (ONGClient *)build DEPRECATED_MSG_ATTRIBUTE("Use buildAndWaitForProtectedData instead.");


/// Set up SDK, wait for the protected data to be available and return configured instance of `ONGClient` using builder's values.
/// @param completion configured instance of `ONGClient`
- (void)buildAndWaitForProtectedData:(void (^)(ONGClient * _Nullable client))completion;

@end

NS_ASSUME_NONNULL_END
